<!DOCTYPE html>
<html lang="ru" data-vue-meta="%7B%22lang%22:%7B%22ssr%22:%22ru%22%7D%7D">
<head >
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
  <meta name="referrer" content="unsafe-url">
  <title>Управление памятью Java / Хабр</title>
  <style>
    /* cyrillic-ext */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveSxf6TF0.woff2) format('woff2');
      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
    }

    /* cyrillic */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveQhf6TF0.woff2) format('woff2');
      unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
    }

    /* latin-ext */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveSBf6TF0.woff2) format('woff2');
      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
    }

    /* latin */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveRhf6.woff2) format('woff2');
      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    }

    /* non-breaking hyphen */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/l/font?kit=KFOlCnqEu92Fr1MmEU9vBh0_IsHAlmrO6g&skey=ee881451c540fdec&v=v29) format('woff2');
      unicode-range: U+02011;
    }
  </style>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.0da14ebf.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.0cb08518.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.2a4fbaf4.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.ec90661e.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/js/7298.c8f1d73c.js" as="script">
  <link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.0da14ebf.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.2a4fbaf4.css">
  <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.e84834061acb2f9f9b50e1ed732cce4c.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
  
  <script data-vue-meta="ssr" type="application/ld+json" data-vmid="ldjson-schema">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/articles\/549176\/"},"headline":"Управление памятью Java","datePublished":"2021-03-29T12:53:31+03:00","dateModified":"2023-05-22T14:20:14+03:00","author":{"@type":"Person","name":"val6852"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"Это глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора.Вероятно, вы могли поду...","url":"https:\/\/habr.com\/ru\/articles\/549176\/#post-content-body","about":["h_java","f_develop"],"image":["https:\/\/habr.com\/share\/publication\/549176\/5a302b4c910de18dcd238c0dfce860f8\/","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/d15\/8b9\/3a2\/d158b93a2c0cab7278c518e9121ad314.jpeg","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/42c\/277\/72f\/42c27772f2dfc09c60be6662bc724bee.jpeg","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/a9f\/ad0\/1b7\/a9fad01b762bf7083f3d8102914ed810.jpeg"]}</script>
  <style>.grecaptcha-badge{visibility: hidden;}</style>
  <meta name="habr-version" content="2.135.0">
  
  <meta data-vue-meta="ssr" property="fb:app_id" content="444736788986613"><meta data-vue-meta="ssr" property="fb:pages" content="472597926099084"><meta data-vue-meta="ssr" name="twitter:card" content="summary_large_image"><meta data-vue-meta="ssr" name="twitter:site" content="@habr_com"><meta data-vue-meta="ssr" property="og:site_name" content="Хабр" data-vmid="og:site_name"><meta data-vue-meta="ssr" property="og:title" content="Управление памятью Java" data-vmid="og:title"><meta data-vue-meta="ssr" name="twitter:title" content="Управление памятью Java" data-vmid="twitter:title"><meta data-vue-meta="ssr" name="aiturec:title" content="Управление памятью Java" data-vmid="aiturec:title"><meta data-vue-meta="ssr" name="description" content="Это глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора. Вероятно, вы могли подумать, что если вы программируете на..." data-vmid="description"><meta data-vue-meta="ssr" itemprop="description" content="Это глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора. Вероятно, вы могли подумать, что если вы программируете на..." data-vmid="description:itemprop"><meta data-vue-meta="ssr" property="og:description" content="Это глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора. Вероятно, вы могли подумать, что если вы программируете на..." data-vmid="og:description"><meta data-vue-meta="ssr" name="twitter:description" content="Это глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора. Вероятно, вы могли подумать, что если вы программируете на..." data-vmid="twitter:description"><meta data-vue-meta="ssr" property="aiturec:description" content="Это глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора. Вероятно, вы могли подумать, что если вы программируете на..." data-vmid="aiturec:description"><meta data-vue-meta="ssr" itemprop="image" content="https://habrastorage.org/getpro/habr/upload_files/cc4/97a/9a6/cc497a9a605aa969de312739e9ed8c7b.jpg" data-vmid="image:itemprop"><meta data-vue-meta="ssr" property="og:image" content="https://habrastorage.org/getpro/habr/upload_files/cc4/97a/9a6/cc497a9a605aa969de312739e9ed8c7b.jpg" data-vmid="og:image"><meta data-vue-meta="ssr" property="og:image:width" content="1200" data-vmid="og:image:width"><meta data-vue-meta="ssr" property="og:image:height" content="630" data-vmid="og:image:height"><meta data-vue-meta="ssr" property="aiturec:image" content="https://habrastorage.org/getpro/habr/upload_files/cc4/97a/9a6/cc497a9a605aa969de312739e9ed8c7b.jpg" data-vmid="aiturec:image"><meta data-vue-meta="ssr" name="twitter:image" content="https://habrastorage.org/getpro/habr/upload_files/cc4/97a/9a6/cc497a9a605aa969de312739e9ed8c7b.jpg" data-vmid="twitter:image"><meta data-vue-meta="ssr" property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/cc4/97a/9a6/cc497a9a605aa969de312739e9ed8c7b.jpg?format=vk" data-vmid="vk:image"><meta data-vue-meta="ssr" property="aiturec:item_id" content="549176" data-vmid="aiturec:item_id"><meta data-vue-meta="ssr" property="aiturec:datetime" content="2021-03-29T09:53:31.000Z" data-vmid="aiturec:datetime"><meta data-vue-meta="ssr" content="https://habr.com/ru/articles/549176/" property="og:url" data-vmid="og:url"><meta data-vue-meta="ssr" property="og:type" content="article" data-vmid="og:type"><meta data-vue-meta="ssr" property="og:locale" content="ru_RU" data-vmid="og:locale"><meta data-vue-meta="ssr" name="keywords" content="memory management, memory leaks, garbage collection, reference type">
  <link data-vue-meta="ssr" href="https://habr.com/ru/rss/publications/549176/?fl=ru" type="application/rss+xml" title="" rel="alternate" name="rss"><link data-vue-meta="ssr" href="https://habr.com/ru/articles/549176/" rel="canonical" data-vmid="canonical"><link data-vue-meta="ssr" rel="image_src" href="https://habrastorage.org/getpro/habr/upload_files/cc4/97a/9a6/cc497a9a605aa969de312739e9ed8c7b.jpg" data-vmid="image:href"><link data-vue-meta="ssr" rel="amphtml" href="https://habr.com/ru/amp/publications/549176/">
  <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
  <meta name="msapplication-TileColor" content="#629FBC">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="mobile-web-app-capable" content="yes">
  <link
    rel="shortcut icon"
    type="image/png"
    sizes="16x16"
    href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png"
  >
  <link
    rel="shortcut icon"
    type="image/png"
    sizes="32x32"
    href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="76x76"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="120x120"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="152x152"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="180x180"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="256x256"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png"
  >
  <link
    rel="mask-icon"
    color="#77a2b6"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg"
  >
  <link
    crossorigin="use-credentials"
    href="/manifest.webmanifest"
    rel="manifest"
  >
  <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
  <script>window.yaContextCb = window.yaContextCb || []</script>
  <script src="https://yandex.ru/ads/system/context.js" async></script>
</head>
<body>


<div id="app" data-server-rendered="true" data-async-called="true"><div class="tm-layout__wrapper"><!----> <div></div> <!----> <header class="tm-header"><div class="tm-page-width"><div class="tm-header__container"><!----> <span class="tm-header__logo-wrap"><a href="/ru/" class="tm-header__logo tm-header__logo_ru"><svg height="16" width="16" class="tm-svg-img tm-header__icon"><title>Хабр</title> <use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a> <span class="tm-header__beta-sign" style="display:none;">β</span></span> <div class="tm-dropdown tm-header__projects"><div class="tm-dropdown__head"><button class="tm-header__dropdown-toggle"><svg height="16" width="16" class="tm-svg-img tm-header__icon tm-header__icon_dropdown"><title>Открыть список</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#arrow-down"></use></svg></button></div> <!----></div> <a href="/ru/sandbox/start/" class="tm-header__become-author-btn">
            Как стать автором
          </a> <div class="tm-feature tm-header__feature tm-feature tm-feature_variant-inline"><!----></div> <!----> <!----></div></div></header> <div class="tm-layout"><div class="tm-page-progress-bar"></div> <div data-menu-sticky="true" class="tm-base-layout__header tm-base-layout__header_is-sticky"><div class="tm-page-width"><div class="tm-base-layout__header-wrapper"><div class="tm-main-menu"><div class="tm-main-menu__section"><nav class="tm-main-menu__section-content"><!----> <a href="/ru/all/" class="tm-main-menu__item">
        Все потоки
      </a> <a href="/ru/flows/develop/" class="tm-main-menu__item">
          Разработка
        </a><a href="/ru/flows/admin/" class="tm-main-menu__item">
          Администрирование
        </a><a href="/ru/flows/design/" class="tm-main-menu__item">
          Дизайн
        </a><a href="/ru/flows/management/" class="tm-main-menu__item">
          Менеджмент
        </a><a href="/ru/flows/marketing/" class="tm-main-menu__item">
          Маркетинг
        </a><a href="/ru/flows/popsci/" class="tm-main-menu__item">
          Научпоп
        </a></nav></div></div> <div class="tm-header-user-menu tm-base-layout__user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search"><svg height="24" width="24" class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search tm-header-user-menu__icon_dark"><title>Поиск</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#search"></use></svg></a> <!----> <!----> <!----> <div class="tm-header-user-menu__item tm-header-user-menu__user_desktop"><div class="tm-dropdown"><div class="tm-dropdown__head"><svg height="24" width="24" data-test-id="menu-toggle-guest" class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_dark"><title>Профиль</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#header-user"></use></svg> <!----></div> <!----></div> <!----></div> <DIV class="v-portal" style="display:none;"></DIV></div></div></div></div> <!----> <div class="tm-page-width"></div> <main class="tm-layout__container"><div hl="ru" data-async-called="true" class="tm-page"><div class="tm-page-width"><!----> <div class="tm-page__wrapper"><div class="tm-page__main tm-page__main_has-sidebar"><div class="pull-down"><!----> <div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg height="24" width="24" class="tm-svg-img pull-down__icon pull-down__arrow"><title>Обновить</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#pull-arrow"></use></svg></div></div> <div class="tm-article-presenter"> <div class="tm-article-presenter__body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><div class="tm-article-presenter__header"> <div class="tm-article-snippet tm-article-presenter__snippet tm-article-snippet"><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/val6852/" title="val6852" class="tm-user-info__userpic"><div class="tm-entity-image"><img alt height="24" src="https://assets.habr.com/habr-web/img/avatars/137.png" width="24" class="tm-entity-image__pic"></img></div></a> <span class="tm-user-info__user tm-user-info__user_appearance-default"><a href="/ru/users/val6852/" class="tm-user-info__username">
      val6852
      <!----></a> <span class="tm-article-datetime-published"><time datetime="2021-03-29T09:53:31.000Z" title="2021-03-29, 12:53">29  мар  2021 в 12:53</time></span></span></span></div> <!----></div> <h1 lang="ru" class="tm-title tm-title_h1"><span>Управление памятью Java</span></h1> <div class="tm-article-snippet__stats"><!----> <div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Время на прочтение</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#clock"></use></svg></span> <span class="tm-article-reading-time__label">
    11 мин
  </span></div> <span class="tm-icon-counter tm-data-icons__item"><svg height="24" width="24" class="tm-svg-img tm-icon-counter__icon"><title>Количество просмотров</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#counter-views"></use></svg> <span class="tm-icon-counter__value">77K</span></span></div> <div class="tm-article-snippet__hubs-container"><div class="tm-article-snippet__hubs"><span class="tm-article-snippet__hubs-item"><a href="/ru/hub/java/" class="tm-article-snippet__hubs-item-link"><span>Java</span> <span title="Профильный хаб" class="tm-article-snippet__profiled-hub">*</span></a></span></div></div> <div class="tm-article-snippet__labels-container"><div class="tm-article-snippet__labels"><div class="tm-article-snippet__label tm-article-snippet__label_variant-tutorial"><span>
          Туториал
        </span></div> <div class="tm-article-snippet__label tm-article-snippet__label tm-article-snippet__label_variant-translation"><span>
          Перевод
        </span></div></div></div> <!----> <!----></div></div> <div class="tm-article-presenter__origin"><a href="https://dzone.com/articles/java-memory-management" target="_blank" class="tm-article-presenter__origin-link">
                Автор оригинала:
                <span>
                  Constantin Marian
                </span></a></div> <div data-gallery-root="" lang="ru" class="tm-article-body"><div></div> <div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><p>Это глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора.</p><p>Вероятно, вы могли подумать, что если вы программируете на Java, то вам незачем  знать о том, как работает память. В Java есть автоматическое управление памятью, красивый и тихий сборщик мусора, который работает в фоновом режиме для очистки неиспользуемых объектов и освобождения некоторой памяти.</p><p>Поэтому вам, как программисту на Java, не нужно беспокоиться о таких проблемах, как уничтожение объектов, поскольку они больше не используются. Однако, даже если в Java этот процесс выполняется автоматически, он ничего не гарантирует. Не зная, как устроен сборщик мусора и память Java, вы можете создать объекты, которые не подходят для сбора мусора, даже если вы их больше не используете.</p><p>Поэтому важно знать, как на самом деле работает память в Java, поскольку это дает вам преимущество в написании высокопроизводительных и оптимизированных приложений, которые никогда не будут аварийно завершены с ошибкой <code>OutOfMemoryError</code>. С другой стороны, когда вы окажетесь в плохой ситуации, вы сможете быстро найти утечку памяти.</p><p>Для начала давайте посмотрим, как обычно организована память в Java:</p><figure class="full-width "><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d15/8b9/3a2/d158b93a2c0cab7278c518e9121ad314.jpeg" alt="Структура памяти" title="Структура памяти" width="1378" height="815" data-src="https://habrastorage.org/getpro/habr/upload_files/d15/8b9/3a2/d158b93a2c0cab7278c518e9121ad314.jpeg" data-blurred="true"/><div><figcaption>Структура памяти</figcaption></div></figure><p>Обычно память делится на две большие части: <strong>стек</strong> и <strong>куча. </strong>Имейте в виду, что размер типов памяти на этом рисунке не пропорционален реальному размеру памяти. Куча - это огромный объем памяти по сравнению со стеком.</p><h3>Стек (Stack)</h3><p>Стековая память отвечает за хранение ссылок на объекты кучи и за хранение типов значений (также известных в Java как примитивные типы), которые содержат само значение, а не ссылку на объект из кучи.</p><p>Кроме того, переменные в стеке имеют определенную видимость, также называемую <strong>областью видимости</strong>. Используются только объекты из активной области. Например, предполагая, что у нас нет никаких глобальных переменных (полей) области видимости, а только локальные переменные, если компилятор выполняет тело метода, он может получить доступ только к объектам из стека, которые находятся внутри тела метода. Он не может получить доступ к другим локальным переменным, так как они не входят в область видимости. Когда метод завершается и возвращается, верхняя часть стека выталкивается, и активная область видимости изменяется.</p><p>Возможно, вы заметили, что на картинке выше отображено несколько стеков памяти. Это связано с тем, что стековая память в Java выделяется для каждого потока. Следовательно, каждый раз, когда поток создается и запускается, он имеет свою собственную стековую память и не может получить доступ к стековой памяти другого потока.</p><h3>Куча (Heap)</h3><p>Эта часть памяти хранит в памяти фактические объекты, на которые ссылаются переменные из стека. Например, давайте проанализируем, что происходит в следующей строке кода:</p><pre><code class="java">StringBuilder builder = new StringBuilder();</code></pre><p>Ключевое слово <code>new </code>несет ответственность за обеспечение того, достаточно ли свободного места на куче, создавая объект типа StringBuilder в памяти и обращаясь к нему через «builder» ссылки, которая попадает в стек.</p><p>Для каждого запущенного процесса JVM существует только одна область памяти в куче. Следовательно, это общая часть памяти независимо от того, сколько потоков выполняется. На самом деле структура кучи немного отличается от того, что показано на картинке выше. Сама куча разделена на несколько частей, что облегчает процесс сборки мусора.</p><p>Максимальные размеры стека и кучи не определены заранее - это зависит от работающей JVM машины. Позже в этой статье мы рассмотрим некоторые конфигурации JVM, которые позволят нам явно указать их размер для запускаемого приложения.</p><h3>Типы ссылок</h3><p>Если вы внимательно посмотрите на изображение <em>структуры памяти</em>, вы, вероятно, заметите, что стрелки, представляющие ссылки на объекты из кучи, на самом деле относятся к разным типам. Это потому, что в языке программирования Java используются разные типы ссылок: <strong>сильные, слабые, мягкие </strong>и <strong>фантомные </strong>ссылки. Разница между типами ссылок заключается в том, что объекты в куче, на которые они ссылаются, имеют право на сборку мусора по различным критериям. Рассмотрим подробнее каждую из них.</p><h4>1. Сильная ссылка</h4><p>Это самые популярные ссылочные типы, к которым мы все привыкли. В приведенном выше примере со StringBuilder мы фактически храним сильную ссылку на объект из кучи. Объект в куче не удаляется сборщиком мусора, пока на него указывает сильная ссылка или если он явно доступен через цепочку сильных ссылок.</p><h4>2. Слабая ссылка</h4><p>Попросту говоря, слабая ссылка на объект из кучи, скорее всего, не сохранится после следующего процесса сборки мусора. Слабая ссылка создается следующим образом:</p><pre><code class="java">WeakReference&lt;StringBuilder> reference = new WeakReference&lt;>(new StringBuilder());</code></pre><p>Хорошим вариантом использования слабых ссылок являются сценарии кеширования. Представьте, что вы извлекаете некоторые данные и хотите, чтобы они также были сохранены в памяти - те же данные могут быть запрошены снова. С другой стороны, вы не уверены, когда и будут ли эти данные запрашиваться снова. Таким образом, вы можете сохранить слабую ссылку на него, и в случае запуска сборщика мусора, возможно, он уничтожит ваш объект в куче. Следовательно, через некоторое время, если вы захотите получить объект, на который вы ссылаетесь, вы можете внезапно получить <code>null </code>значение. <strong>Хорошей</strong> реализацией сценариев кеширования является коллекция <strong>WeakHashMap &lt;K, V></strong>. Если мы откроем <code>WeakHashMap </code>класс в Java API, мы увидим, что его записи фактически расширяют <code>WeakReference</code>класс и используют его поле <strong>ref </strong>в качестве ключа отображения (<code>Map)</code>:</p><pre><code class="java">/**
    * The entries in this hash table extend WeakReference, using its main ref
    * field as the key.
*/

private static class Entry&lt;K,V> extends WeakReference&lt;Object> implements Map.Entry&lt;K,V> {

    V value;</code></pre><p>После сбора мусора ключа из WeakHashMap вся запись удаляется из карты.</p><h4>3. Мягкая ссылка</h4><p>Эти типы ссылок используются для более чувствительных к памяти сценариев, поскольку они будут собираться сборщиком мусора только тогда, когда вашему приложению не хватает памяти. Следовательно, пока нет критической необходимости в освобождении некоторого места, сборщик мусора не будет касаться легко доступных объектов. Java гарантирует, что все объекты, на которые имеются мягкие ссылки, будут очищены до того, как будет выдано исключение <code>OutOfMemoryError</code>. В документации Javadocs говорится, что <em>«все мягкие ссылки на мягко достижимые объекты гарантированно очищены до того, как виртуальная машина выдаст OutOfMemoryError».</em></p><p>Подобно слабым ссылкам, мягкая ссылка создается следующим образом:</p><pre><code class="java">SoftReference&lt;StringBuilder> reference = new SoftReference&lt;>(new StringBuilder());</code></pre><h4>4. Фантомная ссылка</h4><p>Используется для планирования посмертных действий по очистке, поскольку мы точно знаем, что объекты больше не живы. Используется только с очередью ссылок, поскольку <code>.get()</code>метод таких ссылок всегда будет возвращаться <code>null</code><strong>. </strong>Эти типы ссылок считаются предпочтительными для <strong>финализаторов.</strong></p><h3>Ссылки на String</h3><p>Ссылки на тип String в Java обрабатываются немного по- другому. Строки неизменяемы, что означает, что каждый раз, когда вы делаете что-то со строкой, в куче фактически создается другой объект. Для строк Java управляет пулом строк в памяти. Это означает, что Java сохраняет и повторно использует строки, когда это возможно. В основном это верно для строковых литералов. Например:<strong> </strong></p><pre><code class="java">String localPrefix = "297"; //1
String prefix = "297";      //2

if (prefix == localPrefix)
{
    System.out.println("Strings are equal" );
}
else
{
    System.out.println("Strings are different");
}Строка  localPrefix  =  «297» ; // 1</code></pre><p>При запуске этот код распечатывает следующее:</p><p><em> Strings are equal</em>  </p><p>Следовательно, оказывается, что две ссылки типа String на одинаковые строковые литералы фактически указывают на одни и те же объекты в куче. Однако это не действует для вычисляемых строк. Предположим, что у нас есть следующее изменение в строке // 1 приведенного выше кода.</p><pre><code class="java">String localPrefix = new Integer(297).toString(); //1</code></pre><p>Вывод:</p><p><em> Strings are different</em>  </p><p>В этом случае мы фактически видим, что у нас есть два разных объекта в куче. Если учесть, что вычисляемая строка будет использоваться довольно часто, мы можем заставить JVM добавить ее в пул строк, добавив <code>.intern()</code>метод в конец вычисляемой строки:</p><pre><code>String localPrefix = new Integer(297).toString().intern(); //1</code></pre><p><br/></p><p>При добавлении вышеуказанного изменения создается следующий результат:</p><p><em> Строки равны</em></p><h3>Процесс сборки мусора</h3><p>Как обсуждалось ранее, в зависимости от типа ссылки, которую переменная из стека содержит на объект из кучи, в определенный момент времени этот объект становится подходящим для сборщика мусора.</p><figure class="full-width "><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/42c/277/72f/42c27772f2dfc09c60be6662bc724bee.jpeg" alt="Объекты, подходящие для сборки мусора " title="Объекты, подходящие для сборки мусора " width="1372" height="809" data-src="https://habrastorage.org/getpro/habr/upload_files/42c/277/72f/42c27772f2dfc09c60be6662bc724bee.jpeg" data-blurred="true"/><div><figcaption>Объекты, подходящие для сборки мусора </figcaption></div></figure><p>Например, все объекты, отмеченные красным цветом, могут быть собраны сборщиком мусора. Вы можете заметить, что в куче есть объект, который имеет строгие ссылки на другие объекты, которые также находятся в куче (например, это может быть список, который имеет ссылки на его элементы, или объект, имеющий два поля типа, на которые есть ссылки). Однако, поскольку ссылка из стека потеряна, к ней больше нельзя получить доступ, так что это тоже мусор.</p><p>Чтобы углубиться в детали, давайте сначала упомянем несколько вещей:</p><ul><li><p>Этот процесс запускается автоматически Java, и Java решает, запускать или нет этот процесс.</p></li><li><p>На самом деле это дорогостоящий процесс. При запуске сборщика мусора все потоки в вашем приложении приостанавливаются (в зависимости от типа GC, который будет обсуждаться позже).</p></li><li><p>На самом деле это более сложный процесс, чем просто сбор мусора и освобождение памяти.</p></li></ul><p>Несмотря на то, что Java решает, когда запускать сборщик мусора, вы можете явно вызвать <code>System.gc()</code>и ожидать, что сборщик мусора будет запускаться при выполнении этой строки кода, верно?</p><p>Это ошибочное предположение.</p><p>Вы только как бы просите Java запустить сборщик мусора, но, опять же, Java решать, делать это или нет. В любом случае явно вызывать <code>System.gc()</code>не рекомендуется.</p><p>Поскольку это довольно сложный процесс и может повлиять на вашу производительность, он реализован разумно. Для этого используется так называемый процесс «Mark and Sweep». Java анализирует переменные из стека и «отмечает» все объекты, которые необходимо поддерживать в рабочем состоянии. Затем все неиспользуемые объекты очищаются.</p><p>Так что на самом деле Java не собирает мусор. Фактически, чем больше мусора и чем меньше объектов помечены как живые, тем быстрее идет процесс. Чтобы сделать это еще более оптимизированным, память кучи на самом деле состоит из нескольких частей. Мы можем визуализировать использование памяти и другие полезные вещи с помощью <strong>JVisualVM</strong>, инструмента, поставляемого с Java JDK. Единственное, что вам нужно сделать, это установить плагин с именем <strong>Visual GC</strong>, который позволяет увидеть, как на самом деле структурирована память. Давайте немного увеличим масштаб и разберем общую картину:</p><figure class="full-width "><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/a9f/ad0/1b7/a9fad01b762bf7083f3d8102914ed810.jpeg" alt="Поколения памяти кучи " title="Поколения памяти кучи " width="1289" height="826" data-src="https://habrastorage.org/getpro/habr/upload_files/a9f/ad0/1b7/a9fad01b762bf7083f3d8102914ed810.jpeg" data-blurred="true"/><div><figcaption>Поколения памяти кучи </figcaption></div></figure><p>Когда объект создается, он размещается в пространстве <strong>Eden (1)</strong>. Поскольку пространство Eden не такое уж большое, оно заполняется довольно быстро. Сборщик мусора работает в пространстве Eden и помечает объекты как живые.</p><p>Если объект выживает в процессе сборки мусора, он перемещается в так называемое пространство выжившего <strong>S0(2)</strong>. Во второй раз, когда сборщик мусора запускается в пространстве Eden, он перемещает все уцелевшие объекты в пространство <strong>S1(3)</strong>. Кроме того, все, что в настоящее время находится на <strong>S0(2)</strong>, перемещается в пространство <strong>S1(3)</strong>.</p><p>Если объект выживает в течение X раундов сборки мусора (X зависит от реализации JVM, в моем случае это 8), скорее всего, он выживет вечно и перемещается в пространство <strong>Old(4)</strong>.</p><p>Принимая все сказанное выше, если вы посмотрите на <strong>график сборщика мусора (6)</strong>, каждый раз, когда он запускается, вы можете увидеть, что объекты переключаются на пространство выживших и что пространство Эдема увеличивалось. И так далее. Старое поколение также может быть обработано сборщиком мусора, но, поскольку это большая часть памяти по сравнению с пространством Eden, это происходит не так часто. <strong>Метапространство (5)</strong> используется для хранения метаданных о ваших загруженных классах в JVM.</p><p>Представленное изображение на самом деле является приложением Java 8. До Java 8 структура памяти была немного другой. Метапространство на самом деле называется PermGen область. Например, в Java 6 это пространство также хранит память для пула строк. Поэтому, если в вашем приложении Java 6 слишком много строк, оно может аварийно завершить работу.</p><h4>Типы сборщиков мусора</h4><p>Фактически, JVM имеет три типа сборщиков мусора, и программист может выбрать, какой из них следует использовать. По умолчанию Java выбирает используемый тип сборщика мусора в зависимости от базового оборудования.</p><p><strong> 1. Serial GC</strong> (<strong>Последовательный сборщик</strong> <strong>мусора)</strong> - однониточный коллектор. В основном относится к небольшим приложениям с небольшим использованием данных. Можно включить, указав параметр командной строки: <code>-XX:+UseSerialGC.</code></p><p><strong> 2. Parallel GC</strong> (<strong>Параллельный сборщик</strong> <strong>мусора</strong>) - даже по названию, разница между последовательным и параллельным будет заключаться в том, что параллельный сборщик мусора использует несколько потоков для выполнения процесса сбора мусора. Этот тип GC также известен как сборщик производительности. Его можно включить, явно указав параметр: <code>-XX:+UseParallelGC.</code></p><p><strong> 3. Mostly concurrent GC</strong> (<strong>В основном параллельный сборщик</strong> <strong>мусора)</strong>. Если вы помните, ранее в этой статье упоминалось, что процесс сбора мусора на самом деле довольно дорогостоящий, и когда он выполняется, все потоки приостанавливаются. Однако у нас есть в основном параллельный тип GC, который утверждает, что он работает одновременно с приложением. Однако есть причина, по которой он «в основном» параллелен. Он не работает на 100% одновременно с приложением. Есть период времени, на который цепочки приостанавливаются. Тем не менее, пауза делается как можно короче для достижения наилучшей производительности сборщика мусора. На самом деле существует 2 типа в основном параллельных сборщиков мусора:</p><p><strong> 3.1 Garbage First</strong> - высокая производительность с разумным временем паузы приложения. Включено с опцией: <code>-XX:+UseG1GC.</code></p><p><strong> 3.2 Concurrent Mark Sweep</strong> (<strong>Параллельное сканирование отметок)</strong> - время паузы приложения сведено к минимуму. Он может быть использован с помощью опции: <code>-XX:+UseConcMarkSweepGC</code>. Начиная с JDK 9, этот тип GC объявлен устаревшим.</p><blockquote><p><u>Примечание переводчика.</u> Информация про сборщики мусора для различных версий Java приведена в переводе:  </p><p><a href="https://habr.com/ru/post/521988/" rel="noopener noreferrer nofollow">Систематизированный список всех функций Java и JVM в Java 8-15</a></p></blockquote><h3>Советы и приемы</h3><ul><li><p>Чтобы минимизировать объем памяти, максимально ограничьте область видимости переменных. Помните, что каждый раз, когда выскакивает верхняя область видимости из стека, ссылки из этой области теряются, и это может сделать объекты пригодными для сбора мусора.</p></li><li><p>Явно устанавливайте в <code>null</code> устаревшие ссылки. Это сделает объекты, на которые ссылаются, подходящими для сбора мусора.</p></li><li><p>Избегайте финализаторов (finalizer). Они замедляют процесс и ничего не гарантируют. Фантомные ссылки предпочтительны для работы по очистке памяти.</p></li><li><p>Не используйте сильные ссылки там, где можно применить слабые или мягкие ссылки. Наиболее распространенные ошибки памяти - это сценарии кэширования, когда данные хранятся в памяти, даже если они могут не понадобиться.</p></li><li><p>JVisualVM также имеет функцию создания дампа кучи в определенный момент, чтобы вы могли анализировать для каждого класса, сколько памяти он занимает.</p></li><li><p>Настройте JVM в соответствии с требованиями вашего приложения. Явно укажите размер кучи для JVM при запуске приложения. Процесс выделения памяти также является дорогостоящим, поэтому выделите разумный начальный и максимальный объем памяти для кучи. Если вы знаете его, то не имеет смысла начинать с небольшого начального размера кучи с самого начала, JVM расширит это пространство памяти. Указание параметров памяти выполняется с помощью следующих параметров:</p><ul><li><p>Начальный размер кучи <code>-Xms512m</code>- установите начальный размер кучи на 512 мегабайт.</p></li><li><p>Максимальный размер кучи <code>-Xmx1024m</code>- установите максимальный размер кучи 1024 мегабайта.</p></li><li><p>Размер стека потоков <code>-Xss1m</code>- установите размер стека потоков равным 1 мегабайту.</p></li><li><p>Размер поколения <code>-Xmn256m</code>- установите размер поколения 256 мегабайт.</p></li></ul></li><li><p>Если приложение Java выдает ошибку <code>OutOfMemoryError</code>и вам нужна дополнительная информация для обнаружения утечки, запустите процесс с <code>–XX:HeapDumpOnOutOfMemory</code>параметром, который создаст файл дампа кучи, когда эта ошибка произойдет в следующий раз.</p></li><li><p>Используйте опцию <code>-verbose:gc</code>, чтобы получить вывод процесса сборки мусора. Каждый раз, когда происходит сборка мусора, будет генерироваться вывод.</p></li></ul><h3>Заключение</h3><p>Знание того, как организована память, дает вам преимущество в написании хорошего и оптимизированного кода с точки зрения ресурсов памяти. Преимущество заключается в том, что вы можете настроить свою работающую JVM, предоставив различные конфигурации, наиболее подходящие для запуска вашего приложения. Выявление и устранение утечек памяти - это очень просто, если использовать правильные инструменты.</p><p></p></div></div></div> <!----> <!----></div> <!----> <!----></div> <!----> <div class="tm-article-presenter__meta"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bmemory%20management%5D" class="tm-tags-list__link">memory management</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bmemory%20leaks%5D" class="tm-tags-list__link">memory leaks</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bgarbage%20collection%5D" class="tm-tags-list__link">garbage collection</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Breference%20type%5D" class="tm-tags-list__link">reference type</a></li></ul></div> <div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a href="/ru/hub/java/" class="tm-hubs-list__link">Java</a></li></ul></div></div></article></div> <!----></div> <div class="tm-article-sticky-panel"><div class="tm-data-icons tm-article-sticky-panel__icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg height="24" width="24" class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article"><title>Всего голосов 14: ↑13 и ↓1</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#counter-rating"></use></svg> <span title="Всего голосов 14: ↑13 и ↓1" class="tm-votes-meter__value tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating">+12</span></div> <DIV class="v-portal" style="display:none;"></DIV></div> <!----> <!----> <button title="Добавить в закладки" type="button" class="bookmarks-button tm-data-icons__item"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Добавить в закладки</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#counter-favorite"></use></svg></span> <span title="Количество пользователей, добавивших публикацию в закладки" class="bookmarks-button__counter">
    188
  </span></button> <div title="Поделиться" class="tm-sharing tm-data-icons__item"><button type="button" class="tm-sharing__button"><svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button> <DIV class="v-portal" style="display:none;"></DIV></div> <div title="Читать комментарии" class="tm-article-comments-counter-link tm-data-icons__item"><a href="/ru/articles/549176/comments/" class="tm-article-comments-counter-link__link"><svg height="24" width="24" class="tm-svg-img tm-article-comments-counter-link__icon"><title>Комментарии</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#counter-comments"></use></svg> <span class="tm-article-comments-counter-link__value">
      10
    </span></a> <!----></div> <!----> <DIV class="v-portal" style="display:none;"></DIV></div></div></div>  <div class="tm-article-presenter__footer"><div class="tm-article-blocks"><!----> <div></div> <section class="tm-block tm-block tm-block_spacing-bottom"><!----> <div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><div class="tm-article-author"> <div class="tm-user-card tm-article-author__user-card tm-user-card tm-user-card_variant-article"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/val6852/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt src="https://assets.habr.com/habr-web/img/avatars/137.png" class="tm-entity-image__pic"></img></div></a> <div class="tm-user-card__meta"><div title=" 176 голосов " class="tm-counter-container tm-karma tm-karma"><div class="tm-counter-container__header"><div class="tm-karma__votes tm-karma__votes_positive">
      116
    </div></div> <div class="tm-counter-container__footer"><div class="tm-karma__text">
      Карма
    </div> <DIV class="v-portal" style="display:none;"></DIV></div></div> <div title="Рейтинг пользователя" class="tm-counter-container"><div class="tm-counter-container__header"> <div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----> <div class="tm-votes-lever__score tm-votes-lever__score tm-votes-lever__score_appearance-rating"><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter tm-votes-lever__score-counter_rating">
        0
      </span></div> <!----></div></div> <div class="tm-counter-container__footer"><span class="tm-rating__text tm-rating__text">
      Рейтинг
    </span></div></div></div></div></div> <div class="tm-user-card__info tm-user-card__info tm-user-card__info_variant-article"><div class="tm-user-card__title tm-user-card__title tm-user-card__title_variant-article"><!----> <a href="/ru/users/val6852/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article">
          @val6852
        </a> <!----></div> <p class="tm-user-card__short-info tm-user-card__short-info tm-user-card__short-info_variant-article">Пользователь</p></div></div> <div class="tm-user-card__buttons tm-user-card__buttons tm-user-card__buttons_variant-article"><!----> <!----> <!----> <!----> <!----></div></div> <!----></div> <DIV class="v-portal" style="display:none;"></DIV></div> <!----></section> <div class="tm-adfox-banner__container tm-page-article__banner"><!----> <div id="adfox_164725660339535756" class="tm-adfox-banner tm-adfox-banner tm-adfox-banner_variant-leaderboard"></div></div> <div class="tm-article-blocks__comments"><div id="publication-comments" class="tm-article-page-comments"><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/articles/549176/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style"><svg height="24" width="24" class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted"><title>Комментарии</title> <use xlink:href="/img/megazord-v28.2fb1b1c1..svg#counter-comments"></use></svg> <span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted">
       Комментарии 10 
    </span></a> <!----></div></div></div>  <section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2> </div> <!----></header> <div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><div class="tm-tabs tm-tabs"><div><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim">
        Лучшие за сутки
      </button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link tm-tabs__tab-link_slim">
        Похожие
      </button></span></div> <!----></div> <div class="similar-and-daily__tab-view"><div class="placeholder-wrapper"><!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <div class="tm-placeholder-article-cards"><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div></div> <!----> <!----> <!----> <!----></div> <!----></div></div> <!----></section> <div><div class="placeholder-wrapper"><!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <div class="tm-placeholder-promo"><div class="tm-placeholder-promo__header"><div class="tm-placeholder__line tm-placeholder__line_promo-title"></div></div> <div class="tm-placeholder-promo__body"><div class="tm-placeholder-promo__posts"><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div> <div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div> <div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div> <div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div> <div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div> <div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div></div> <div class="tm-placeholder-promo__dots"><div class="tm-placeholder-promo__dot"></div> <div class="tm-placeholder-promo__dot"></div> <div class="tm-placeholder-promo__dot"></div></div></div></div> <!----> <!----> <!----> <!----> <!----></div></div> <div class="placeholder-wrapper"><!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <div class="tm-placeholder-inset tm-placeholder-tasks"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div> <div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li></ul></div> <div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----></div> <!----> </div></div></div></div></div> <div class="tm-page__sidebar"><div class="tm-layout-sidebar"><div class="tm-layout-sidebar__ads tm-layout-sidebar__ads_initial"><div class="tm-adfox-banner__container tm-layout-sidebar__banner tm-layout-sidebar__banner_top"><!----> <div id="adfox_164725680533065327" class="tm-adfox-banner tm-adfox-banner tm-adfox-banner_variant-half-page"></div></div></div> <div class="tm-sexy-sidebar tm-sexy-sidebar_initial" style="margin-top:0px;"><!----> <section data-navigatable="" tabindex="0" data-async-called="true" class="tm-block tm-stories-block tm-block tm-block_spacing-around"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Истории</h2> </div> <!----></header> <div class="tm-block__body tm-block__body tm-block__body_variant-equal"><div class="tm-stories-empty"><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div></div> <!----></div> <!----></section> <section data-async-called="true" class="tm-block tm-block tm-block_spacing-around"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Работа</h2> </div> <!----></header> <div class="tm-block__body tm-block__body"><div class="tm-vacancies-block__item"><a href="https://career.habr.com/vacancies/java_developer" target="_blank" class="tm-vacancies-block__vacancy-title">
        Java разработчик
      </a> <div class="tm-vacancies-block__vacancies-count">
        494
    вакансии
      </div></div></div> <footer class="tm-block__footer"><a href="https://career.habr.com/catalog" class="tm-block-extralink">
      Все вакансии
    </a></footer></section> <div class="tm-adfox-banner__container tm-layout-sidebar__banner tm-layout-sidebar__banner_bottom"><!----> <div id="adfox_164725691003361602" class="tm-adfox-banner tm-adfox-banner tm-adfox-banner_variant-medium-rectangle"></div></div></div></div></div></div></div></div></main> <!----></div> <div class="tm-footer-menu"><div class="tm-page-width"><div class="tm-footer-menu__container"><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Ваш аккаунт
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr/?back=/ru/articles/549176/&amp;hl=ru" rel="nofollow" target="_self">
                Войти
              </a></li><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr-register/?back=/ru/articles/549176/&amp;hl=ru" rel="nofollow" target="_self">
                Регистрация
              </a></li></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Разделы
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/ru/" class="footer-menu__item-link router-link-active">
                Статьи
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/news/" class="footer-menu__item-link">
                Новости
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/hubs/" class="footer-menu__item-link">
                Хабы
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/companies/" class="footer-menu__item-link">
                Компании
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/users/" class="footer-menu__item-link">
                Авторы
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/sandbox/" class="footer-menu__item-link">
                Песочница
              </a></li></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Информация
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/ru/docs/help/" class="footer-menu__item-link">
                Устройство сайта
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/docs/authors/codex/" class="footer-menu__item-link">
                Для авторов
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/docs/companies/corpblogs/" class="footer-menu__item-link">
                Для компаний
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/docs/docs/transparency/" class="footer-menu__item-link">
                Документы
              </a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/agreement/?hl=ru_RU" target="_blank">
                Соглашение
              </a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/confidential/?hl=ru_RU" target="_blank">
                Конфиденциальность
              </a></li></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Услуги
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/corporate-blogs/" target="_blank">
                Корпоративный блог
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/advertising/" target="_blank">
                Медийная реклама
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/native-special/" target="_blank">
                Нативные проекты
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/education-programs/" target="_blank">
                Образовательные программы
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/hello-startup/" target="_blank">
                Стартапам
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/specials/" class="footer-menu__item-link">
                Спецпроекты
              </a></li></ul></div></div></div></div></div> <div class="tm-footer"><div class="tm-page-width"><div class="tm-footer__container"><!----> <div class="tm-footer__social"><a href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Facebook</title> <use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Twitter</title> <use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>VK</title> <use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Telegram</title> <use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Youtube</title> <use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Яндекс Дзен</title> <use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a></div> <DIV class="v-portal" style="display:none;"></DIV> <button class="tm-footer__link"><!---->
        Настройка языка
      </button> <a href="/ru/feedback/" class="tm-footer__link">
        Техническая поддержка
      </a> <a href="/berserk-mode-nope" class="tm-footer__link">
        Вернуться на старую версию
      </a> <div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2023, </span> <span class="tm-copyright__name"><a href="https://company.habr.com/" rel="noopener" target="_blank" class="tm-copyright__link">Habr</a></span></span></div></div></div></div> <!----> <!----></div> <div class="vue-portal-target"></div></div>
<script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"549176":{"id":"549176","timePublished":"2021-03-29T09:53:31+00:00","isCorporative":false,"lang":"ru","titleHtml":"Управление памятью Java","leadData":{"textHtml":"\u003Cp\u003EЭто глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcc4\u002F97a\u002F9a6\u002Fcc497a9a605aa969de312739e9ed8c7b.jpg","buttonTextHtml":"Читать далее","image":{"url":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcc4\u002F97a\u002F9a6\u002Fcc497a9a605aa969de312739e9ed8c7b.jpg","fit":"cover","positionY":0,"positionX":0}},"editorVersion":"2.0","postType":"article","postLabels":[{"type":"translation","data":{"originalAuthorName":"Constantin Marian","originalUrl":"https:\u002F\u002Fdzone.com\u002Farticles\u002Fjava-memory-management"}}],"author":{"id":"2187018","alias":"val6852","fullname":null,"avatarUrl":null,"speciality":null,"scoreStats":{"score":116,"votesCount":176},"rating":0,"relatedData":null,"contacts":[],"authorContacts":[],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"donationsMethod":null},"statistics":{"commentsCount":10,"favoritesCount":188,"readingCount":77211,"score":12,"votesCount":14,"votesCountPlus":13,"votesCountMinus":1},"hubs":[{"id":"375","alias":"java","type":"collective","title":"Java","titleHtml":"Java","isProfiled":true,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"}],"relatedData":null,"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cp\u003EЭто глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора.\u003C\u002Fp\u003E\u003Cp\u003EВероятно, вы могли подумать, что если вы программируете на Java, то вам незачем  знать о том, как работает память. В Java есть автоматическое управление памятью, красивый и тихий сборщик мусора, который работает в фоновом режиме для очистки неиспользуемых объектов и освобождения некоторой памяти.\u003C\u002Fp\u003E\u003Cp\u003EПоэтому вам, как программисту на Java, не нужно беспокоиться о таких проблемах, как уничтожение объектов, поскольку они больше не используются. Однако, даже если в Java этот процесс выполняется автоматически, он ничего не гарантирует. Не зная, как устроен сборщик мусора и память Java, вы можете создать объекты, которые не подходят для сбора мусора, даже если вы их больше не используете.\u003C\u002Fp\u003E\u003Cp\u003EПоэтому важно знать, как на самом деле работает память в Java, поскольку это дает вам преимущество в написании высокопроизводительных и оптимизированных приложений, которые никогда не будут аварийно завершены с ошибкой \u003Ccode\u003EOutOfMemoryError\u003C\u002Fcode\u003E. С другой стороны, когда вы окажетесь в плохой ситуации, вы сможете быстро найти утечку памяти.\u003C\u002Fp\u003E\u003Cp\u003EДля начала давайте посмотрим, как обычно организована память в Java:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd15\u002F8b9\u002F3a2\u002Fd158b93a2c0cab7278c518e9121ad314.jpeg\" alt=\"Структура памяти\" title=\"Структура памяти\" width=\"1378\" height=\"815\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd15\u002F8b9\u002F3a2\u002Fd158b93a2c0cab7278c518e9121ad314.jpeg\" data-blurred=\"true\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EСтруктура памяти\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EОбычно память делится на две большие части: \u003Cstrong\u003Eстек\u003C\u002Fstrong\u003E и \u003Cstrong\u003Eкуча. \u003C\u002Fstrong\u003EИмейте в виду, что размер типов памяти на этом рисунке не пропорционален реальному размеру памяти. Куча - это огромный объем памяти по сравнению со стеком.\u003C\u002Fp\u003E\u003Ch3\u003EСтек (Stack)\u003C\u002Fh3\u003E\u003Cp\u003EСтековая память отвечает за хранение ссылок на объекты кучи и за хранение типов значений (также известных в Java как примитивные типы), которые содержат само значение, а не ссылку на объект из кучи.\u003C\u002Fp\u003E\u003Cp\u003EКроме того, переменные в стеке имеют определенную видимость, также называемую \u003Cstrong\u003Eобластью видимости\u003C\u002Fstrong\u003E. Используются только объекты из активной области. Например, предполагая, что у нас нет никаких глобальных переменных (полей) области видимости, а только локальные переменные, если компилятор выполняет тело метода, он может получить доступ только к объектам из стека, которые находятся внутри тела метода. Он не может получить доступ к другим локальным переменным, так как они не входят в область видимости. Когда метод завершается и возвращается, верхняя часть стека выталкивается, и активная область видимости изменяется.\u003C\u002Fp\u003E\u003Cp\u003EВозможно, вы заметили, что на картинке выше отображено несколько стеков памяти. Это связано с тем, что стековая память в Java выделяется для каждого потока. Следовательно, каждый раз, когда поток создается и запускается, он имеет свою собственную стековую память и не может получить доступ к стековой памяти другого потока.\u003C\u002Fp\u003E\u003Ch3\u003EКуча (Heap)\u003C\u002Fh3\u003E\u003Cp\u003EЭта часть памяти хранит в памяти фактические объекты, на которые ссылаются переменные из стека. Например, давайте проанализируем, что происходит в следующей строке кода:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003EStringBuilder builder = new StringBuilder();\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EКлючевое слово \u003Ccode\u003Enew \u003C\u002Fcode\u003Eнесет ответственность за обеспечение того, достаточно ли свободного места на куче, создавая объект типа StringBuilder в памяти и обращаясь к нему через «builder» ссылки, которая попадает в стек.\u003C\u002Fp\u003E\u003Cp\u003EДля каждого запущенного процесса JVM существует только одна область памяти в куче. Следовательно, это общая часть памяти независимо от того, сколько потоков выполняется. На самом деле структура кучи немного отличается от того, что показано на картинке выше. Сама куча разделена на несколько частей, что облегчает процесс сборки мусора.\u003C\u002Fp\u003E\u003Cp\u003EМаксимальные размеры стека и кучи не определены заранее - это зависит от работающей JVM машины. Позже в этой статье мы рассмотрим некоторые конфигурации JVM, которые позволят нам явно указать их размер для запускаемого приложения.\u003C\u002Fp\u003E\u003Ch3\u003EТипы ссылок\u003C\u002Fh3\u003E\u003Cp\u003EЕсли вы внимательно посмотрите на изображение \u003Cem\u003Eструктуры памяти\u003C\u002Fem\u003E, вы, вероятно, заметите, что стрелки, представляющие ссылки на объекты из кучи, на самом деле относятся к разным типам. Это потому, что в языке программирования Java используются разные типы ссылок: \u003Cstrong\u003Eсильные, слабые, мягкие \u003C\u002Fstrong\u003Eи \u003Cstrong\u003Eфантомные \u003C\u002Fstrong\u003Eссылки. Разница между типами ссылок заключается в том, что объекты в куче, на которые они ссылаются, имеют право на сборку мусора по различным критериям. Рассмотрим подробнее каждую из них.\u003C\u002Fp\u003E\u003Ch4\u003E1. Сильная ссылка\u003C\u002Fh4\u003E\u003Cp\u003EЭто самые популярные ссылочные типы, к которым мы все привыкли. В приведенном выше примере со StringBuilder мы фактически храним сильную ссылку на объект из кучи. Объект в куче не удаляется сборщиком мусора, пока на него указывает сильная ссылка или если он явно доступен через цепочку сильных ссылок.\u003C\u002Fp\u003E\u003Ch4\u003E2. Слабая ссылка\u003C\u002Fh4\u003E\u003Cp\u003EПопросту говоря, слабая ссылка на объект из кучи, скорее всего, не сохранится после следующего процесса сборки мусора. Слабая ссылка создается следующим образом:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003EWeakReference&lt;StringBuilder\u003E reference = new WeakReference&lt;\u003E(new StringBuilder());\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EХорошим вариантом использования слабых ссылок являются сценарии кеширования. Представьте, что вы извлекаете некоторые данные и хотите, чтобы они также были сохранены в памяти - те же данные могут быть запрошены снова. С другой стороны, вы не уверены, когда и будут ли эти данные запрашиваться снова. Таким образом, вы можете сохранить слабую ссылку на него, и в случае запуска сборщика мусора, возможно, он уничтожит ваш объект в куче. Следовательно, через некоторое время, если вы захотите получить объект, на который вы ссылаетесь, вы можете внезапно получить \u003Ccode\u003Enull \u003C\u002Fcode\u003Eзначение. \u003Cstrong\u003EХорошей\u003C\u002Fstrong\u003E реализацией сценариев кеширования является коллекция \u003Cstrong\u003EWeakHashMap &lt;K, V\u003E\u003C\u002Fstrong\u003E. Если мы откроем \u003Ccode\u003EWeakHashMap \u003C\u002Fcode\u003Eкласс в Java API, мы увидим, что его записи фактически расширяют \u003Ccode\u003EWeakReference\u003C\u002Fcode\u003Eкласс и используют его поле \u003Cstrong\u003Eref \u003C\u002Fstrong\u003Eв качестве ключа отображения (\u003Ccode\u003EMap)\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003E\u002F**\n    * The entries in this hash table extend WeakReference, using its main ref\n    * field as the key.\n*\u002F\n\nprivate static class Entry&lt;K,V\u003E extends WeakReference&lt;Object\u003E implements Map.Entry&lt;K,V\u003E {\n\n    V value;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПосле сбора мусора ключа из WeakHashMap вся запись удаляется из карты.\u003C\u002Fp\u003E\u003Ch4\u003E3. Мягкая ссылка\u003C\u002Fh4\u003E\u003Cp\u003EЭти типы ссылок используются для более чувствительных к памяти сценариев, поскольку они будут собираться сборщиком мусора только тогда, когда вашему приложению не хватает памяти. Следовательно, пока нет критической необходимости в освобождении некоторого места, сборщик мусора не будет касаться легко доступных объектов. Java гарантирует, что все объекты, на которые имеются мягкие ссылки, будут очищены до того, как будет выдано исключение \u003Ccode\u003EOutOfMemoryError\u003C\u002Fcode\u003E. В документации Javadocs говорится, что \u003Cem\u003E«все мягкие ссылки на мягко достижимые объекты гарантированно очищены до того, как виртуальная машина выдаст OutOfMemoryError».\u003C\u002Fem\u003E\u003C\u002Fp\u003E\u003Cp\u003EПодобно слабым ссылкам, мягкая ссылка создается следующим образом:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003ESoftReference&lt;StringBuilder\u003E reference = new SoftReference&lt;\u003E(new StringBuilder());\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E4. Фантомная ссылка\u003C\u002Fh4\u003E\u003Cp\u003EИспользуется для планирования посмертных действий по очистке, поскольку мы точно знаем, что объекты больше не живы. Используется только с очередью ссылок, поскольку \u003Ccode\u003E.get()\u003C\u002Fcode\u003Eметод таких ссылок всегда будет возвращаться \u003Ccode\u003Enull\u003C\u002Fcode\u003E\u003Cstrong\u003E. \u003C\u002Fstrong\u003EЭти типы ссылок считаются предпочтительными для \u003Cstrong\u003Eфинализаторов.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Ch3\u003EСсылки на String\u003C\u002Fh3\u003E\u003Cp\u003EСсылки на тип String в Java обрабатываются немного по- другому. Строки неизменяемы, что означает, что каждый раз, когда вы делаете что-то со строкой, в куче фактически создается другой объект. Для строк Java управляет пулом строк в памяти. Это означает, что Java сохраняет и повторно использует строки, когда это возможно. В основном это верно для строковых литералов. Например:\u003Cstrong\u003E \u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003EString localPrefix = \"297\"; \u002F\u002F1\nString prefix = \"297\";      \u002F\u002F2\n\nif (prefix == localPrefix)\n{\n    System.out.println(\"Strings are equal\" );\n}\nelse\n{\n    System.out.println(\"Strings are different\");\n}Строка  localPrefix  =  «297» ; \u002F\u002F 1\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри запуске этот код распечатывает следующее:\u003C\u002Fp\u003E\u003Cp\u003E\u003Cem\u003E Strings are equal\u003C\u002Fem\u003E  \u003C\u002Fp\u003E\u003Cp\u003EСледовательно, оказывается, что две ссылки типа String на одинаковые строковые литералы фактически указывают на одни и те же объекты в куче. Однако это не действует для вычисляемых строк. Предположим, что у нас есть следующее изменение в строке \u002F\u002F 1 приведенного выше кода.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003EString localPrefix = new Integer(297).toString(); \u002F\u002F1\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВывод:\u003C\u002Fp\u003E\u003Cp\u003E\u003Cem\u003E Strings are different\u003C\u002Fem\u003E  \u003C\u002Fp\u003E\u003Cp\u003EВ этом случае мы фактически видим, что у нас есть два разных объекта в куче. Если учесть, что вычисляемая строка будет использоваться довольно часто, мы можем заставить JVM добавить ее в пул строк, добавив \u003Ccode\u003E.intern()\u003C\u002Fcode\u003Eметод в конец вычисляемой строки:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003EString localPrefix = new Integer(297).toString().intern(); \u002F\u002F1\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp\u003EПри добавлении вышеуказанного изменения создается следующий результат:\u003C\u002Fp\u003E\u003Cp\u003E\u003Cem\u003E Строки равны\u003C\u002Fem\u003E\u003C\u002Fp\u003E\u003Ch3\u003EПроцесс сборки мусора\u003C\u002Fh3\u003E\u003Cp\u003EКак обсуждалось ранее, в зависимости от типа ссылки, которую переменная из стека содержит на объект из кучи, в определенный момент времени этот объект становится подходящим для сборщика мусора.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F42c\u002F277\u002F72f\u002F42c27772f2dfc09c60be6662bc724bee.jpeg\" alt=\"Объекты, подходящие для сборки мусора \" title=\"Объекты, подходящие для сборки мусора \" width=\"1372\" height=\"809\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F42c\u002F277\u002F72f\u002F42c27772f2dfc09c60be6662bc724bee.jpeg\" data-blurred=\"true\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EОбъекты, подходящие для сборки мусора \u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EНапример, все объекты, отмеченные красным цветом, могут быть собраны сборщиком мусора. Вы можете заметить, что в куче есть объект, который имеет строгие ссылки на другие объекты, которые также находятся в куче (например, это может быть список, который имеет ссылки на его элементы, или объект, имеющий два поля типа, на которые есть ссылки). Однако, поскольку ссылка из стека потеряна, к ней больше нельзя получить доступ, так что это тоже мусор.\u003C\u002Fp\u003E\u003Cp\u003EЧтобы углубиться в детали, давайте сначала упомянем несколько вещей:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EЭтот процесс запускается автоматически Java, и Java решает, запускать или нет этот процесс.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНа самом деле это дорогостоящий процесс. При запуске сборщика мусора все потоки в вашем приложении приостанавливаются (в зависимости от типа GC, который будет обсуждаться позже).\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНа самом деле это более сложный процесс, чем просто сбор мусора и освобождение памяти.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EНесмотря на то, что Java решает, когда запускать сборщик мусора, вы можете явно вызвать \u003Ccode\u003ESystem.gc()\u003C\u002Fcode\u003Eи ожидать, что сборщик мусора будет запускаться при выполнении этой строки кода, верно?\u003C\u002Fp\u003E\u003Cp\u003EЭто ошибочное предположение.\u003C\u002Fp\u003E\u003Cp\u003EВы только как бы просите Java запустить сборщик мусора, но, опять же, Java решать, делать это или нет. В любом случае явно вызывать \u003Ccode\u003ESystem.gc()\u003C\u002Fcode\u003Eне рекомендуется.\u003C\u002Fp\u003E\u003Cp\u003EПоскольку это довольно сложный процесс и может повлиять на вашу производительность, он реализован разумно. Для этого используется так называемый процесс «Mark and Sweep». Java анализирует переменные из стека и «отмечает» все объекты, которые необходимо поддерживать в рабочем состоянии. Затем все неиспользуемые объекты очищаются.\u003C\u002Fp\u003E\u003Cp\u003EТак что на самом деле Java не собирает мусор. Фактически, чем больше мусора и чем меньше объектов помечены как живые, тем быстрее идет процесс. Чтобы сделать это еще более оптимизированным, память кучи на самом деле состоит из нескольких частей. Мы можем визуализировать использование памяти и другие полезные вещи с помощью \u003Cstrong\u003EJVisualVM\u003C\u002Fstrong\u003E, инструмента, поставляемого с Java JDK. Единственное, что вам нужно сделать, это установить плагин с именем \u003Cstrong\u003EVisual GC\u003C\u002Fstrong\u003E, который позволяет увидеть, как на самом деле структурирована память. Давайте немного увеличим масштаб и разберем общую картину:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa9f\u002Fad0\u002F1b7\u002Fa9fad01b762bf7083f3d8102914ed810.jpeg\" alt=\"Поколения памяти кучи \" title=\"Поколения памяти кучи \" width=\"1289\" height=\"826\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa9f\u002Fad0\u002F1b7\u002Fa9fad01b762bf7083f3d8102914ed810.jpeg\" data-blurred=\"true\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EПоколения памяти кучи \u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EКогда объект создается, он размещается в пространстве \u003Cstrong\u003EEden (1)\u003C\u002Fstrong\u003E. Поскольку пространство Eden не такое уж большое, оно заполняется довольно быстро. Сборщик мусора работает в пространстве Eden и помечает объекты как живые.\u003C\u002Fp\u003E\u003Cp\u003EЕсли объект выживает в процессе сборки мусора, он перемещается в так называемое пространство выжившего \u003Cstrong\u003ES0(2)\u003C\u002Fstrong\u003E. Во второй раз, когда сборщик мусора запускается в пространстве Eden, он перемещает все уцелевшие объекты в пространство \u003Cstrong\u003ES1(3)\u003C\u002Fstrong\u003E. Кроме того, все, что в настоящее время находится на \u003Cstrong\u003ES0(2)\u003C\u002Fstrong\u003E, перемещается в пространство \u003Cstrong\u003ES1(3)\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EЕсли объект выживает в течение X раундов сборки мусора (X зависит от реализации JVM, в моем случае это 8), скорее всего, он выживет вечно и перемещается в пространство \u003Cstrong\u003EOld(4)\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EПринимая все сказанное выше, если вы посмотрите на \u003Cstrong\u003Eграфик сборщика мусора (6)\u003C\u002Fstrong\u003E, каждый раз, когда он запускается, вы можете увидеть, что объекты переключаются на пространство выживших и что пространство Эдема увеличивалось. И так далее. Старое поколение также может быть обработано сборщиком мусора, но, поскольку это большая часть памяти по сравнению с пространством Eden, это происходит не так часто. \u003Cstrong\u003EМетапространство (5)\u003C\u002Fstrong\u003E используется для хранения метаданных о ваших загруженных классах в JVM.\u003C\u002Fp\u003E\u003Cp\u003EПредставленное изображение на самом деле является приложением Java 8. До Java 8 структура памяти была немного другой. Метапространство на самом деле называется PermGen область. Например, в Java 6 это пространство также хранит память для пула строк. Поэтому, если в вашем приложении Java 6 слишком много строк, оно может аварийно завершить работу.\u003C\u002Fp\u003E\u003Ch4\u003EТипы сборщиков мусора\u003C\u002Fh4\u003E\u003Cp\u003EФактически, JVM имеет три типа сборщиков мусора, и программист может выбрать, какой из них следует использовать. По умолчанию Java выбирает используемый тип сборщика мусора в зависимости от базового оборудования.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E 1. Serial GC\u003C\u002Fstrong\u003E (\u003Cstrong\u003EПоследовательный сборщик\u003C\u002Fstrong\u003E \u003Cstrong\u003Eмусора)\u003C\u002Fstrong\u003E - однониточный коллектор. В основном относится к небольшим приложениям с небольшим использованием данных. Можно включить, указав параметр командной строки: \u003Ccode\u003E-XX:+UseSerialGC.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E 2. Parallel GC\u003C\u002Fstrong\u003E (\u003Cstrong\u003EПараллельный сборщик\u003C\u002Fstrong\u003E \u003Cstrong\u003Eмусора\u003C\u002Fstrong\u003E) - даже по названию, разница между последовательным и параллельным будет заключаться в том, что параллельный сборщик мусора использует несколько потоков для выполнения процесса сбора мусора. Этот тип GC также известен как сборщик производительности. Его можно включить, явно указав параметр: \u003Ccode\u003E-XX:+UseParallelGC.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E 3. Mostly concurrent GC\u003C\u002Fstrong\u003E (\u003Cstrong\u003EВ основном параллельный сборщик\u003C\u002Fstrong\u003E \u003Cstrong\u003Eмусора)\u003C\u002Fstrong\u003E. Если вы помните, ранее в этой статье упоминалось, что процесс сбора мусора на самом деле довольно дорогостоящий, и когда он выполняется, все потоки приостанавливаются. Однако у нас есть в основном параллельный тип GC, который утверждает, что он работает одновременно с приложением. Однако есть причина, по которой он «в основном» параллелен. Он не работает на 100% одновременно с приложением. Есть период времени, на который цепочки приостанавливаются. Тем не менее, пауза делается как можно короче для достижения наилучшей производительности сборщика мусора. На самом деле существует 2 типа в основном параллельных сборщиков мусора:\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E 3.1 Garbage First\u003C\u002Fstrong\u003E - высокая производительность с разумным временем паузы приложения. Включено с опцией: \u003Ccode\u003E-XX:+UseG1GC.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E 3.2 Concurrent Mark Sweep\u003C\u002Fstrong\u003E (\u003Cstrong\u003EПараллельное сканирование отметок)\u003C\u002Fstrong\u003E - время паузы приложения сведено к минимуму. Он может быть использован с помощью опции: \u003Ccode\u003E-XX:+UseConcMarkSweepGC\u003C\u002Fcode\u003E. Начиная с JDK 9, этот тип GC объявлен устаревшим.\u003C\u002Fp\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Cu\u003EПримечание переводчика.\u003C\u002Fu\u003E Информация про сборщики мусора для различных версий Java приведена в переводе:  \u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F521988\u002F\" rel=\"noopener noreferrer nofollow\"\u003EСистематизированный список всех функций Java и JVM в Java 8-15\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\u003Ch3\u003EСоветы и приемы\u003C\u002Fh3\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EЧтобы минимизировать объем памяти, максимально ограничьте область видимости переменных. Помните, что каждый раз, когда выскакивает верхняя область видимости из стека, ссылки из этой области теряются, и это может сделать объекты пригодными для сбора мусора.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EЯвно устанавливайте в \u003Ccode\u003Enull\u003C\u002Fcode\u003E устаревшие ссылки. Это сделает объекты, на которые ссылаются, подходящими для сбора мусора.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EИзбегайте финализаторов (finalizer). Они замедляют процесс и ничего не гарантируют. Фантомные ссылки предпочтительны для работы по очистке памяти.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНе используйте сильные ссылки там, где можно применить слабые или мягкие ссылки. Наиболее распространенные ошибки памяти - это сценарии кэширования, когда данные хранятся в памяти, даже если они могут не понадобиться.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EJVisualVM также имеет функцию создания дампа кучи в определенный момент, чтобы вы могли анализировать для каждого класса, сколько памяти он занимает.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНастройте JVM в соответствии с требованиями вашего приложения. Явно укажите размер кучи для JVM при запуске приложения. Процесс выделения памяти также является дорогостоящим, поэтому выделите разумный начальный и максимальный объем памяти для кучи. Если вы знаете его, то не имеет смысла начинать с небольшого начального размера кучи с самого начала, JVM расширит это пространство памяти. Указание параметров памяти выполняется с помощью следующих параметров:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EНачальный размер кучи \u003Ccode\u003E-Xms512m\u003C\u002Fcode\u003E- установите начальный размер кучи на 512 мегабайт.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EМаксимальный размер кучи \u003Ccode\u003E-Xmx1024m\u003C\u002Fcode\u003E- установите максимальный размер кучи 1024 мегабайта.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EРазмер стека потоков \u003Ccode\u003E-Xss1m\u003C\u002Fcode\u003E- установите размер стека потоков равным 1 мегабайту.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EРазмер поколения \u003Ccode\u003E-Xmn256m\u003C\u002Fcode\u003E- установите размер поколения 256 мегабайт.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EЕсли приложение Java выдает ошибку \u003Ccode\u003EOutOfMemoryError\u003C\u002Fcode\u003Eи вам нужна дополнительная информация для обнаружения утечки, запустите процесс с \u003Ccode\u003E–XX:HeapDumpOnOutOfMemory\u003C\u002Fcode\u003Eпараметром, который создаст файл дампа кучи, когда эта ошибка произойдет в следующий раз.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EИспользуйте опцию \u003Ccode\u003E-verbose:gc\u003C\u002Fcode\u003E, чтобы получить вывод процесса сборки мусора. Каждый раз, когда происходит сборка мусора, будет генерироваться вывод.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch3\u003EЗаключение\u003C\u002Fh3\u003E\u003Cp\u003EЗнание того, как организована память, дает вам преимущество в написании хорошего и оптимизированного кода с точки зрения ресурсов памяти. Преимущество заключается в том, что вы можете настроить свою работающую JVM, предоставив различные конфигурации, наиболее подходящие для запуска вашего приложения. Выявление и устранение утечек памяти - это очень просто, если использовать правильные инструменты.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"memory management"},{"titleHtml":"memory leaks"},{"titleHtml":"garbage collection"},{"titleHtml":"reference type"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcc4\u002F97a\u002F9a6\u002Fcc497a9a605aa969de312739e9ed8c7b.jpg","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcc4\u002F97a\u002F9a6\u002Fcc497a9a605aa969de312739e9ed8c7b.jpg","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F549176\\\u002F\"},\"headline\":\"Управление памятью Java\",\"datePublished\":\"2021-03-29T12:53:31+03:00\",\"dateModified\":\"2023-05-22T14:20:14+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"val6852\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"Это глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора.Вероятно, вы могли поду...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F549176\\\u002F#post-content-body\",\"about\":[\"h_java\",\"f_develop\"],\"image\":[\"https:\\\u002F\\\u002Fhabr.com\\\u002Fshare\\\u002Fpublication\\\u002F549176\\\u002F5a302b4c910de18dcd238c0dfce860f8\\\u002F\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fd15\\\u002F8b9\\\u002F3a2\\\u002Fd158b93a2c0cab7278c518e9121ad314.jpeg\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F42c\\\u002F277\\\u002F72f\\\u002F42c27772f2dfc09c60be6662bc724bee.jpeg\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fa9f\\\u002Fad0\\\u002F1b7\\\u002Fa9fad01b762bf7083f3d8102914ed810.jpeg\"]}","metaDescription":"Это глубокое погружение в управление памятью Java позволит расширить ваши знания о том, как работает куча, ссылочные типы и сборка мусора. Вероятно, вы могли подумать, что если вы программируете на...","mainImageUrl":null,"amp":true,"customTrackerLinks":[]},"polls":[],"commentsEnabled":{"status":true,"reason":null},"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":"tutorial","banner":null,"multiwidget":null,"readingTime":11,"complexity":null,"isEditorial":false}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"postReasonsList":null,"view":"cards","lastVisitedRoute":{},"ssrCommentsArticleIds":["179295"],"viewedPosts":[],"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[{"title":"Java разработчик","vacanciesCount":494,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fjava_developer","itemHubs":["java","javame_dev","gradle"]}],"hubs":"java"},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":""}},"companies":{"companyRefs":{},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"multiwidgets":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"multiwidgetLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"unreadCount":0,"pagesCount":0},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"flows":{"updates":{"countNewPostsBySubscription":null,"countNewThreadsBySubscription":null,"countNewPostsAll":49,"countNewNewsAll":22,"countNewThreadsAll":3},"flows":[{"alias":"develop","id":"1","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"alias":"admin","id":"6","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"alias":"design","id":"2","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"alias":"management","id":"3","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"alias":"marketing","id":"4","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"alias":"popsci","id":"7","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}]},"global":{"isPwa":false,"device":"desktop","isHabrCom":true},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"welcomePage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":{},"pathname":null,"path":null,"href":""}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null},"modal":{"modals":[]},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"tasks":"project-block-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":false,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-524","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff61\u002F57c\u002Fb2f\u002Ff6157cb2fc4ed70be2bab2fbed039c86.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Fjavalove"},"title":"О чём мечтают джависты","lang":"ru","startTime":"2023-08-07T11:10:00+03:00","finishTime":"2023-08-23T23:59:00+03:00","slides":[{"id":"story-524_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F9c0\u002F5e8\u002F254\u002F9c05e82549f7f73b46797c338218aaa7.jpg","button":null},{"id":"story-524_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Faf3\u002F7d2\u002F609\u002Faf37d260974202bc8b0fb9842360c03b.jpg","button":null},{"id":"story-524_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0b1\u002F326\u002F86e\u002F0b132686e77543906ddd242f7ff54107.jpg","button":null},{"id":"story-524_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F85e\u002Fd35\u002F134\u002F85ed351347c8edff18e725cb82d5f272.jpg","button":{"title":"Сезон Java one love","link":"https:\u002F\u002Fu.habr.com\u002Fjavalove","colorType":"dark"}},{"id":"story-524_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd43\u002F170\u002F197\u002Fd43170197ea5d4dd98f6063779540aa8.jpg","button":{"title":"Сезон Java one love","link":"https:\u002F\u002Fu.habr.com\u002Fjavalove","colorType":"dark"}}]},{"id":"story-522","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F482\u002F92f\u002Fb5b\u002F48292fb5b7b3031c220702df3a20b811.png","title":"Хабр","link":null},"title":"Лучшие статьи из блогов компаний","lang":"ru","startTime":"2023-08-04T10:15:31+03:00","finishTime":"2023-08-17T23:59:00+03:00","slides":[{"id":"story-522_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F955\u002F153\u002Fc07\u002F955153c07db987cb53a07962cbcc2021.jpg","button":null},{"id":"story-522_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc35\u002F963\u002Fb62\u002Fc35963b6249fdc0db6c67bab47d355a1.jpg","button":{"title":"Годовые кольца","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fvstack\u002Farticles\u002F749950\u002F","colorType":"light"}},{"id":"story-522_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fda7\u002F44b\u002F8e6\u002Fda744b8e665d20527bc965a1e24c5795.jpg","button":{"title":"Немного ретро","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fbeeline_tech\u002Farticles\u002F749316\u002F","colorType":"light"}},{"id":"story-522_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F78f\u002Fc3f\u002Fc28\u002F78fc3fc280c3c4dd849aaea9a064d977.jpg","button":{"title":"Пробы и ошибки","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fozontech\u002Farticles\u002F749328\u002F","colorType":"light"}},{"id":"story-522_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffb0\u002F6db\u002F177\u002Ffb06db177d7f3f97d0a0b91d8b879e87.jpg","button":{"title":"Полистать","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fncloudtech\u002Farticles\u002F749302\u002F","colorType":"light"}},{"id":"story-522_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F32e\u002F6ea\u002F14c\u002F32e6ea14c355d249aa0f2e960ff363f3.jpg","button":{"title":"Новая ступень","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fsberbank\u002Farticles\u002F746736\u002F","colorType":"light"}},{"id":"story-522_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F569\u002F2c8\u002Ffa6\u002F5692c8fa66c1ceb017050fcb2f0176ea.jpg","button":{"title":"На абордаж!","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Ftimeweb\u002Farticles\u002F746680\u002F","colorType":"light"}},{"id":"story-522_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F630\u002F5ef\u002Fcdf\u002F6305efcdfbf52ac283739176bd5d17e8.jpg","button":{"title":"Примагнититься","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fvstack\u002Farticles\u002F748864\u002F","colorType":"light"}}]},{"id":"story-520","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F4d6\u002F2ec\u002F7aa\u002F4d62ec7aa90a395c8cf4a005efc14dc0.png","title":"Хабр Карьера","link":"https:\u002F\u002Fu.habr.com\u002FQWwqo"},"title":"Где работать в IT: билайн","lang":"ru","startTime":"2023-08-03T11:00:13+03:00","finishTime":"2023-08-09T15:52:13+03:00","slides":[{"id":"story-520_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F489\u002F434\u002F74d\u002F48943474d70fe5a26c50810b66a88081.png","button":{"title":"Читать","link":"https:\u002F\u002Fu.habr.com\u002FQWwqo","colorType":"light"}},{"id":"story-520_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F754\u002Fe47\u002Fb0e\u002F754e47b0e9af6f365d135e1402fe9b7d.png","button":null},{"id":"story-520_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7c6\u002F5dc\u002F65b\u002F7c65dc65b39c8700b2425e313e30bac0.png","button":null},{"id":"story-520_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F038\u002Feb4\u002F978\u002F038eb4978a3d1c4fba91c2cd15b84771.png","button":{"title":"Подробнее","link":"https:\u002F\u002Fu.habr.com\u002FQWwqo","colorType":"light"}}]},{"id":"story-518","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fed7\u002F504\u002F3a6\u002Fed75043a6b2eb92cf18b720970552e41.png","title":"Хабр Новости","link":"https:\u002F\u002Fu.habr.com\u002FQXTXN"},"title":"Новая система донатов на Хабре","lang":"ru","startTime":"2023-08-02T15:39:00+03:00","finishTime":"2023-08-13T15:39:00+03:00","slides":[{"id":"story-518_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F21a\u002Fa16\u002F91a\u002F21aa1691a1404500303cbd8057b4fdd3.jpg","button":null},{"id":"story-518_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fba2\u002Ffe2\u002F801\u002Fba2fe280178366eabfc4f25e61f249b8.jpg","button":{"title":"Вот это новость!","link":"https:\u002F\u002Fu.habr.com\u002FQXTXN","colorType":"dark"}},{"id":"story-518_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3de\u002F10a\u002Fd7e\u002F3de10ad7eeb144b0280975bf7f9bed51.jpg","button":{"title":"Подробности","link":"https:\u002F\u002Fu.habr.com\u002FQXTXN","colorType":"dark"}}]},{"id":"story-516","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F436\u002Ff62\u002F62f\u002F436f6262fdd70f97160d6fb4c9ecd4db.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Fdiy0"},"title":"Что почитать в сезоне DIY","lang":"ru","startTime":"2023-08-01T10:26:00+03:00","finishTime":"2023-08-13T23:59:00+03:00","slides":[{"id":"story-516_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F101\u002Fbb0\u002Fdfb\u002F101bb0dfb372f6b12a0a44368a3b8018.jpg","button":null},{"id":"story-516_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F53b\u002F3b6\u002Fe99\u002F53b3b6e99bd42f54cf6790d99f9f0f17.jpg","button":{"title":"DIY-таймер кормления","link":"https:\u002F\u002Fu.habr.com\u002Fdiy1","colorType":"light"}},{"id":"story-516_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7e3\u002Fe26\u002F333\u002F7e3e263332f2f12960c1aeadd8e62556.jpg","button":{"title":"Солнечные часы","link":"https:\u002F\u002Fu.habr.com\u002Fdiy2","colorType":"light"}},{"id":"story-516_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Faef\u002Fc68\u002F3bb\u002Faefc683bbfc9aa27bb14e7deae4b64df.jpg","button":{"title":"Блок питания","link":"https:\u002F\u002Fu.habr.com\u002Fdiy3","colorType":"light"}},{"id":"story-516_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F904\u002F7c0\u002F845\u002F9047c0845c5c6b4225d5bf7fee7d49a0.jpg","button":{"title":"Arduino AY player","link":"https:\u002F\u002Fu.habr.com\u002Fdiy4","colorType":"light"}},{"id":"story-516_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff1b\u002F427\u002F134\u002Ff1b4271345337f762c47dbed935e7b58.jpg","button":{"title":"Ремонт магнитолы","link":"https:\u002F\u002Fu.habr.com\u002Fdiy5","colorType":"light"}},{"id":"story-516_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F12b\u002F309\u002F69d\u002F12b30969d544810023b16f2233a59629.jpg","button":{"title":"Светящийся шар","link":"https:\u002F\u002Fu.habr.com\u002Fdiy6","colorType":"light"}},{"id":"story-516_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F439\u002F16a\u002F570\u002F43916a570236d3b48d7c1fd314038732.jpg","button":{"title":"Сервопривод MC50","link":"https:\u002F\u002Fu.habr.com\u002Fdiy7","colorType":"light"}}]},{"id":"story-514","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff2c\u002Fbc6\u002Fb02\u002Ff2cbc6b0257d8e230a0188cc8c95df4b.png","title":"Хабр Карьера","link":"https:\u002F\u002Fu.habr.com\u002FAh1jS"},"title":"Истории карьерных неуспехов","lang":"ru","startTime":"2023-07-31T13:51:00+03:00","finishTime":"2023-08-07T23:59:10+03:00","slides":[{"id":"story-514_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdad\u002Fa1d\u002F145\u002Fdada1d145d8d78bfb5bdc713310d0d04.png","button":{"title":"Читать истории","link":"https:\u002F\u002Fu.habr.com\u002FAh1jS","colorType":"dark"}},{"id":"story-514_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff86\u002F761\u002F2f1\u002Ff867612f12d1769fd486c2881c35189e.png","button":null},{"id":"story-514_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fad4\u002F307\u002Fe0f\u002Fad4307e0f2ad85d88b80d14506c05048.png","button":{"title":"К историям","link":"https:\u002F\u002Fu.habr.com\u002FAh1jS","colorType":"dark"}}]},{"id":"story-510","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e8\u002F940\u002Fb09\u002F2e8940b09afc4f34886e7ed0770378ed.png","title":"Хабр IT-гид","link":"https:\u002F\u002Fu.habr.com\u002F83lvb"},"title":"Как новичкам освоиться в IT","lang":"ru","startTime":"2023-07-27T10:00:00+03:00","finishTime":"2023-08-13T18:47:00+03:00","slides":[{"id":"story-510_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F01b\u002Fdcd\u002F81d\u002F01bdcd81d712fe9d32aebfa74a166d1b.png","button":null},{"id":"story-510_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F61c\u002F76f\u002F1c5\u002F61c76f1c5b36d09f9ce2ffb6b8e771c1.jpg","button":{"title":"Выбрать компанию","link":"https:\u002F\u002Fu.habr.com\u002FYndH4","colorType":"light"}},{"id":"story-510_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F855\u002F1ea\u002F29f\u002F8551ea29fee98cea55d939dd334a26e1.jpg","button":{"title":"Превозмогание","link":"https:\u002F\u002Fu.habr.com\u002FoB9OQ","colorType":"light"}},{"id":"story-510_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc68\u002F92b\u002F927\u002Fc6892b92710b96949aaafc313c120f10.jpg","button":{"title":"Статистика и советы","link":"https:\u002F\u002Fu.habr.com\u002FK0NLH","colorType":"light"}},{"id":"story-510_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa7f\u002F8d8\u002F93e\u002Fa7f8d893e12ee3a1e3666121d2a9adec.jpg","button":{"title":"Сравнить","link":"https:\u002F\u002Fu.habr.com\u002FBkp5y","colorType":"light"}},{"id":"story-510_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2c2\u002F02d\u002F384\u002F2c202d384febc2a66697dfa9d67d2c08.jpg","button":{"title":"При чём тут Япония","link":"https:\u002F\u002Fu.habr.com\u002Ftjh7n","colorType":"light"}},{"id":"story-510_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F62c\u002Fbe4\u002F22d\u002F62cbe422d44bc721515a9443edc50ab0.jpg","button":{"title":"Мечты vs реальность","link":"https:\u002F\u002Fu.habr.com\u002FLfnj0","colorType":"light"}},{"id":"story-510_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe16\u002Fbf2\u002F07f\u002Fe16bf207fcf5ae3e08272394e56ea1ce.jpg","button":{"title":"Маршрут построен","link":"https:\u002F\u002Fu.habr.com\u002FfAo9O","colorType":"light"}},{"id":"story-510_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd5a\u002F0f5\u002F2b6\u002Fd5a0f52b6486541a51b01e0fc8e899c8.jpg","button":{"title":"Красные цифры","link":"https:\u002F\u002Fu.habr.com\u002FwPS0M","colorType":"light"}}]},{"id":"story-500","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc0b\u002F647\u002Ff6d\u002Fc0b647f6d66f97d77b7d340ce771d392.png","title":"Хабр Карьера","link":"https:\u002F\u002Fu.habr.com\u002FDZ5Pe"},"title":"Зарплаты IT-специалистов в первой половине 2023","lang":"ru","startTime":"2023-07-19T18:03:00+03:00","finishTime":"2023-08-09T18:03:00+03:00","slides":[{"id":"story-500_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F934\u002Fcfd\u002Fbd2\u002F934cfdbd2caad779059e795161e45936.png","button":null},{"id":"story-500_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F505\u002F9e5\u002F916\u002F5059e5916d4d82850a64eb3ae8ec2ab4.png","button":null},{"id":"story-500_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb06\u002F127\u002F968\u002Fb06127968815472a16c29884a40972f4.png","button":{"title":"К исследованию","link":"https:\u002F\u002Fu.habr.com\u002FDZ5Pe","colorType":"light"}},{"id":"story-500_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbe4\u002F4fd\u002Fe69\u002Fbe44fde6970b9635a37e3d2849c5fdd3.png","button":null},{"id":"story-500_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa2e\u002F8e4\u002F71e\u002Fa2e8e471eb3951e3749d89f04b363f80.png","button":{"title":"Подробнее","link":"https:\u002F\u002Fu.habr.com\u002FDZ5Pe","colorType":"light"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"items":{},"pagesCache":{},"markedViewedSilently":{},"markedRead":{},"unreadCounters":{"applications":null,"system":null,"mentions":null,"subscribers":null,"posts_and_comments":null},"unviewedCounters":{"applications":null,"system":null,"mentions":null,"subscribers":null,"posts_and_comments":null}},"events":{"events":[{"id":"event_19","titleHtml":"E-COMMUNITY. Конференция про IT в e-com","startDay":"2023-08-24","finishDay":"2023-08-24","startTime":"16:00","finishTime":"20:00","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fwebt\u002Fsg\u002Foo\u002Fyi\u002Fsgooyiyvuvsjbzgsab680cp0zns.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_ecom","geo":[],"isOnline":true,"descriptionHtml":"\u003Cp\u003EКонференция для тех, кому интересно, что под капотом лидирующих сервисов и&nbsp;продуктов в&nbsp;e-commerce.\u003C\u002Fp\u003E\u003Cp\u003EОбсудим главные технологические вызовы и&nbsp;прорывы на&nbsp;рынке: в&nbsp;архитектуре, бэкенде, ML&nbsp;и&nbsp;техническом лидерстве. В&nbsp;программе доклады от&nbsp;спикеров из&nbsp;СберМаркета, Ozon, X5&nbsp;и&nbsp;Lamoda.\u003C\u002Fp\u003E\u003Cp\u003EУ&nbsp;инженеров в&nbsp;е-com&rsquo;е много общих тем: сезонность, высокие нагрузки, доставка и&nbsp;работа со&nbsp;стоками. Встретимся, чтобы поделиться экспертизой. А&nbsp;там и&nbsp;до&nbsp;общих стандартов в&nbsp;индустрии недалеко.\u003C\u002Fp\u003E"},{"id":"event_16","titleHtml":"Тестирование алгоритмов систем помощи водителю","startDay":"2023-09-28","finishDay":"2023-09-28","startTime":"10:00","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fwebt\u002Fdp\u002Frg\u002F0o\u002Fdprg0oqjoduu6x0s0skjszojzsy.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fexpcalendar","geo":["Москва"],"isOnline":false,"descriptionHtml":"\u003Cp\u003EНа&nbsp;семинаре будет показан подход к&nbsp;тестированию алгоритмов систем помощи водителю, позволяющий значительно сократить количество натурных испытаний за&nbsp;счет использования виртуального полигона.\u003C\u002Fp\u003E\u003Cp\u003EТестирование будет рассмотрено на&nbsp;примере системы удержания в&nbsp;полосе с&nbsp;функцией адаптивного круиз-контроля и&nbsp;будет включать в&nbsp;себя тестирование алгоритмов в&nbsp;реальном времени на&nbsp;комплексах полунатурного моделирования &laquo;РИТМ&raquo; с&nbsp;использованием CAN-интерфейсов.\u003C\u002Fp\u003E\u003Cp\u003EТакже мы&nbsp;продемонстрируем процесс создания математической модели динамики движения автомобиля и&nbsp;виртуального полигона, необходимых для тестирования разработанных алгоритмов.\u003C\u002Fp\u003E\u003Cp\u003EМероприятие призвано собрать на&nbsp;одной площадке всех специалистов данной тематики для обмена знаний и&nbsp;опыта, чтобы вооружившись последними технологиями дать толчок в&nbsp;развитии безопасности дорожного движения.\u003C\u002Fp\u003E"},{"id":"event_18","titleHtml":"Business&IT Day: Retail CPG","startDay":"2023-09-28","finishDay":"2023-09-28","startTime":"09:50","finishTime":"14:00","imageUrl":"https:\u002F\u002Fhsto.org\u002Fwebt\u002Fsi\u002Fu_\u002F80\u002Fsiu_80howp0giy-wsvmnrb1qrnw.jpeg","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fbusinessitday","geo":[],"isOnline":true,"descriptionHtml":"\u003Cp\u003EЕжегодная онлайн-конференция про организацию бизнес-процессов и&nbsp;использование информационных технологий в&nbsp;ритейле и&nbsp;ТНП.\u003C\u002Fp\u003E\u003Cp\u003EОбсудим IT&nbsp;в&nbsp;розничной торговле, федеральных и&nbsp;региональных розничных сетях, сетях аптек и&nbsp;на&nbsp;предприятиях, производящих товары народного потребления.\u003C\u002Fp\u003E"},{"id":"event_14","titleHtml":"XIX конференция разработчиков свободных программ «Базальт СПО»","startDay":"2023-09-29","finishDay":"2023-10-01","startTime":"10:00","finishTime":"19:00","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fwebt\u002Fyi\u002Fh2\u002Fmk\u002Fyih2mkst3jow_svnkemhq27h0o4.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_bzlt","geo":["Переславль-Залесский"],"isOnline":true,"descriptionHtml":"\u003Cp\u003EЕжегодно конференция объединяет разработчиков свободных программ из&nbsp;России и&nbsp;других стран, чтобы обсудить новейшие достижения в&nbsp;области свободного&nbsp;ПО и&nbsp;перспективы его развития, наладить личные и&nbsp;профессиональные контакты, инициировать создание новых проектов сферы СПО.\u003C\u002Fp\u003E\u003Cp\u003EДля участия в&nbsp;конференции в&nbsp;качестве докладчика необходимо отправить заявку по&nbsp;адресу conference@lists.altlinux.org до&nbsp;1&nbsp;сентября 2023&nbsp;года.\u003C\u002Fp\u003E"}]}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script>
<script src="https://assets.habr.com/habr-web/js/chunk-vendors.0cb08518.js" defer></script><script src="https://assets.habr.com/habr-web/js/7298.c8f1d73c.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.ec90661e.js" defer></script>



    <script async src="https://www.googletagmanager.com/gtag/js?id=G-S28W1WC23F"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

    ym(24049213, "init", {
      defer:true,
      trackLinks:true,
      accurateTrackBounce:true,
      webvisor:false,
    });
  </script>
  <noscript>
    <div>
      <img src="https://mc.yandex.ru/watch/24049213" style="position:absolute; left:-9999px;" alt="" />
    </div>
  </noscript>
  
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
<script src="/js/ads.js" onload="window['zhY4i4nJ9K'] = true"></script>
</body>
</html>
